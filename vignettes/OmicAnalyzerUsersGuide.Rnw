%\VignetteIndexEntry{OmicAnalyzer User's Guide}
%\VignetteEncoding{UTF-8}

\documentclass[12pt, letterpaper]{article}

\usepackage{fancyvrb}
\usepackage{amsmath}
\usepackage{float}
\usepackage[textwidth=6in]{geometry}
\usepackage[colorlinks=true,urlcolor=blue,breaklinks]{hyperref}
\usepackage[utf8]{inputenc}

\usepackage{color}
\definecolor{blue}{rgb}{0,0,0.5}

\usepackage{Sweave}
\RecustomVerbatimEnvironment{Sinput}{Verbatim}{
  fontshape=n,
  formatcom=\color{blue}
}

\setlength{\parindent}{0em}
\setlength{\parskip}{0.5em}

\title{OmicAnalyzer User's Guide}
\author{John Blischak}
\date{\today{} \hfill OmicAnalyzer \Sexpr{packageVersion("OmicAnalyzer")}}

\begin{document}
\SweaveOpts{concordance=TRUE}
\maketitle
\tableofcontents

<<setup, echo=FALSE>>=
if (!interactive()) options(prompt = " ", continue = " ", width = 70)
@

\section{Overview}

The goal of the OmicAnalyzer software is to facilitate the interactive
exploration of the results from an omics experiment. Using OmicAnalyzer, any
bioinformatician familar with the basics of the R programming language can
create and share a high-quality, comprehensive dashboard for interactive
investigation of the patterns and signals in the data.

The steps include:

\begin{enumerate}

  \item The bioinformatician analyzes the data from the omics experiment. This
  can be done in R or any other platform (e.g.
  \href{https://omicsoftdocs.github.io/ArraySuiteDoc/tutorials/ArrayStudio/ArrayStudio/}{Array
  Studio}).

  \item The bioinformatician registers the results using the OmicAnalyzer R
  functions. If the results were produced outside of R, they will need to be
  exported to files, and then imported into R.

  \item The bioinformatician uses OmicAnalyzer to export the analysis results to
  a study pacakge and install it.

  \item The bioinformatician can run the app locally or deploy it on a server.

  \item If the app is deployed, collaborators can access the dashboard directly
  in their web browser.

\end{enumerate}

\section{Structure of analysis results}

Before you start registering your data with OmicAnalyzer, it will be helpful to
have a high-level understanding of how OmicAnalyzer defines the main components
of the analysis results and how they relate to each other.

\subsection{A study and its models}

The largest unit of organization is the study. This corresponds to all the
experiments performed and analyses conducted in order to address a scientific
question. A study should contain all the relevant results that someone would
need to evaluate the scientific question. In more practical terms, any
analyses that uses overlapping biological samples should be included in the
same study (e.g. if you measured transcript and protein levels in the same
samples).

A study has one or models. The models can be very different (one model for
transcript levels and another for protein levels) or very similar (same exact
input data but differential expression performed with two different software
packages).

\begin{figure}[H]
  \includegraphics{images/models}
  \centering
  \label{fig:models}
\end{figure}

\subsection{Differential expression results}

One of the primary type of results that OmicAnalyzer displays for interactive
investigation is the statistical results from a differential expression
analysis. Here ``differential expression'' is broadly defined,
e.g. this could be differential methylation or any other molecular phenotype.

Each model has one or more tests. Each test (also commonly referred to as a
\href{https://en.wikipedia.org/wiki/Contrast_(statistics)}{contrast}) refers
to the statistical results from testing a single coefficient (or a combination
of coefficients) from the model.

For example, a model that compares cases versus controls will only have one
test:

\begin{figure}[H]
  \includegraphics{images/results-1}
  \centering
  \label{fig:results-1}
\end{figure}

A model that compares a control versus two different treatments will likely have
two tests:

\begin{figure}[H]
  \includegraphics{images/results-2}
  \centering
  \label{fig:results-2}
\end{figure}

And a model that compares three distinct groups will likely have 3 tests
(since $\binom{3}{2} = 3$ pairwise comparisons):

\begin{figure}[H]
  \includegraphics{images/results-3}
  \centering
  \label{fig:results-3}
\end{figure}

\subsection{Enrichment analysis}

A typical systems biology analysis to perform after a differential expression
analysis is to test for enrichment of the differentially expressed features
in terms from curated annotation databases (e.g. \href{https://www.genome.jp/kegg/}{KEGG},
\href{https://reactome.org/}{Reactome}). The OmicAnalyzer app provides a
table, network, and various other visualizations to explore the output of
enrichment analyses.

Similar to the differential expression results, enrichment analyses are also
added per model and per test. However, there is also the additional category of
the annotation database that was used for the enrichment (e.g. KEGG, Reactome).
Thus each enrichments table corresponds to a given study-annotation-test
combination.

For example, imagine that enrichment analyses were performed with the KEGG and
Reactome annotations. A model that compares cases versus controls will have
two enrichments tables:

\begin{figure}[H]
  \includegraphics{images/enrichments-1}
  \centering
  \label{fig:enrichments-1}
\end{figure}

A model that compares a control versus two different treatments will have
four enrichment tables, 2 for each of the tests:

\begin{figure}[H]
  \includegraphics{images/enrichments-2}
  \centering
  \label{fig:enrichments-2}
\end{figure}

And a model that compares three distinct groups will have 6 enrichment tables,
2 for each of the 3 tests:

\begin{figure}[H]
  \includegraphics{images/enrichments-3}
  \centering
  \label{fig:enrichments-3}
\end{figure}

\subsection{Additional information}

The primary data sets are the differential expression results and the enrichments
results. However, the more information you supply about the experimental data,
the more details will be included in the app.

For example, you can include metadata about the features, metadata about the
samples, or the individual assay measurements (expression, methylation,
phosphorylation, etc.).

This additional metadata can be added per model (e.g. different feature
metadata for RNA versus protein measurements) or shared across models (e.g. if
the same samples are used in each model).

\section{Step-by-step example}

Now it's time to convert your results into an OmicAnalyzer study! Below you will
see how to:

\begin{enumerate}

  \item Create a new OmicAnalyzer study

  \item Add your existing results to your OmicAnalyzer study

  \item Install your OmicAnalyzer study as an R package

  \item Start the app to interactively explore your results

\end{enumerate}

\subsection{Example data: RNAseq123}

As an illustrative example, this vignette uses the results from the
Bioconductor workflow package
\href{https://bioconductor.org/packages/release/workflows/html/RNAseq123.html}{RNAseq123}
\cite{RNAseq123}. It is a limma+voom analysis of RNA-seq data from 3 cell
populations in the mouse mammary gland collected by Sheridan et al., 2015
\cite{Sheridan2015}.

The 3 cell populations are basal, luminal progenitor (LP), and mature luminal (ML).
In the RNAseq123 analysis, the primary differential expression results obtained
are for the tests ``Basal versus LP'' and ``Basal versus ML''. This is similar to
the design diagrammed in Figure \ref{fig:results-2}.

\begin{figure}[H]
  \includegraphics{images/results-rna}
  \centering
  \label{fig:results-rna}
\end{figure}

Furthermore they performed enrichment analysis with one annotation database:
the Broad Institute's MSigDB c2 collection, which was converted converted
from human to mouse gene identifiers by
\href{http://bioinf.wehi.edu.au/software/MSigDB/}{WEHI Bioinformatics}.

\begin{figure}[H]
  \includegraphics{images/enrichments-rna}
  \centering
  \label{fig:enrichments-rna}
\end{figure}

To obtain the results, we ran their script
\href{https://bioconductor.org/packages/release/workflows/vignettes/RNAseq123/inst/doc/limmaWorkflow.R}{limmaWorkflow.R}
and saved a subset of the objects to use in this vignette.

<<data>>=
data("RNAseq123", package = "OmicAnalyzer")
ls()
@

You are welcome to follow along with these example data sets if you like. However,
the main goal of this document is for you to input your own study data into
OmicAnalyzer. The particular details of this specific study are not important.
It happens to be an RNA-seq analysis of mice that was analyzed with limma+voom,
but none of that has to apply to your own study.

\subsection{Create an OmicAnalyzer study}

The first step is to load the OmicAnalyzer package into the current R
session.\footnote{If you haven't installed OmicAnalyzer yet, please see the
file \texttt{README.md} for the installation instructions.}

<<package>>=
library(OmicAnalyzer)
@

Next run \texttt{createStudy()} to create your OmicAnalyzer study object. The
first argument is the name of the study. The second argument (optional) is a description of
the study.

<<createStudy>>=
study <- createStudy(name = "vignetteExample",
                     description = "Bioc workflow package converted to OmicAnalyzer")
@

Because the \texttt{name} will be used when naming the study package, it must
follow these rules that apply to all R package names:

\begin{itemize}

  \item Begin with a letter

  \item End with a letter or a number

  \item Be at least two characters long

  \item Only contain alphanumeric characters and periods (full stops)

\end{itemize}

For more details, run \texttt{?createStudy}.

\subsection{Add differential expression results}

The RNAseq123 differential results were generated by the limma function
\texttt{topTable()}. The results for the test ``Basal versus LP'' are in
\texttt{basal.vs.lp} and the results for ``Basal versus ML'' in
\texttt{basal.vs.ml}.

<<>>=
head(basal.vs.lp)
@

The first column contains the Entrez gene identifier for each gene that they
tested. OmicAnalyzer refers to this primary feature identifier of the study as
the featureID. It must be unique, i.e. there must be only one row of results
per featureID. The second and third columns contain more information about the
features: the gene symbol and chromosomal location, respectively. OmicAnalyzer
stores feature metadata columns in a separate table, so these will be removed
from the results table. The remaining columns contain the quantitative
measurements from the statistical test.

This table is almost ready for import into OmicAnalyzer. There are only two strict
requirements for a results table:

\begin{itemize}

  \item The first column must be a character vector containing the featureID

  \item The remaining columns must be numeric vectors

\end{itemize}

Thus I only perform two steps:

\begin{enumerate}

  \item Remove columns 2 and 3.

<<>>=
basal.vs.lp.oa <- basal.vs.lp[, -2:-3]
@

  \item Sort the table by the column \texttt{P.Value}. This is optional, but it
  will improve the app experience by having the most statistically significant
  features appear at the very top of the table.

<<>>=
basal.vs.lp.oa <- basal.vs.lp.oa[order(basal.vs.lp.oa$P.Value), ]
@

\end{enumerate}

This results table is now ready to be imported into OmicAnalyzer.

<<>>=
head(basal.vs.lp.oa)
@

Next I do the same two operations to \texttt{basal.vs.ml}, but in one step.

<<>>=
basal.vs.ml.oa <- basal.vs.ml[order(basal.vs.ml$P.Value), -2:-3]
head(basal.vs.ml.oa)
@

Lastly I need to combine these two results table. Recall from Figure
\ref{fig:results-rna} that the results are defined for a given model and test
combination. To represent this hierarchical relationship, OmicAnalyzer uses
nested lists. Below I create a new list named \texttt{results}. Its first
element is the name of the model, \texttt{main}, referred to as the
\texttt{modelID}. Then I assign \texttt{main} a list where each element is the
name of a test from that model, referred to as the \texttt{testID}. Each
element contains the result table for that test.

<<>>=
results <- list(
  main = list(
    basal.vs.lp = basal.vs.lp.oa,
    basal.vs.ml = basal.vs.ml.oa
  )
)
@

I add this to the OmicAnalyzer study with \texttt{addResults()}.

<<>>=
study <- addResults(study, results)
@

For more details, run \texttt{?addResults}.

\subsection{Add enrichments}

The RNAseq123 enrichments were generated by the limma function
\texttt{camera()}. The results for the test ``Basal versus LP'' are in
\texttt{cam.BasalvsLP} and the results for ``Basal versus ML'' in
\texttt{cam.BasalvsML}.

<<>>=
head(cam.BasalvsLP)
@

The row names contain the names of the annotation terms used in the
enrichment analysis. OmicAnalyzer refers to these as the \texttt{termID}. The
columns contain the number of genes in each term (\texttt{NGenes}), the
direction of the enrichment (\texttt{Direction}), the nominal p-value
(\texttt{PValue}), and the multiple-testing adjusted p-value (\texttt{FDR}).

Unlike the results table, OmicAnalyzer has strict requirements for the names and
contents of the enrichments table columns:

\begin{enumerate}

  \item \texttt{termID} - the unique identifier for each term

  \item \texttt{description} - a human readable description of each term

  \item \texttt{nominal} - the nominal statistical result from the enrichment test

  \item \texttt{adjusted} - the statistical result adjusted for multiple testing

\end{enumerate}

The object returned by \texttt{camera} contains all the required information
except the human readable description. Below I create new data frames to store
the enrichments tables. I perform some string processing of the
\texttt{termID} to create the \texttt{description}. If creating a human readable
description is too onerous, you can simply repeat the \texttt{termID} for
this column.

<<>>=
# LP
cam.BasalvsLP.oa <- data.frame(
  termID = row.names(cam.BasalvsLP),
  description = gsub("_", " ", tolower(row.names(cam.BasalvsLP))),
  nominal = cam.BasalvsLP$PValue,
  adjusted = cam.BasalvsLP$FDR,
  stringsAsFactors = FALSE
)
# ML
cam.BasalvsML.oa <- data.frame(
  termID = row.names(cam.BasalvsML),
  description = gsub("_", " ", tolower(row.names(cam.BasalvsML))),
  nominal = cam.BasalvsML$PValue,
  adjusted = cam.BasalvsML$FDR,
  stringsAsFactors = FALSE
)
head(cam.BasalvsML.oa)
@

Lastly I need to combine these two enrichments table. Recall from Figure
\ref{fig:enrichments-rna} that the enrichments are defined for a given model,
annotation, and test combination. Again a nested list is used to represent
this hierarchical relationship. The nested list defined below,
\texttt{enrichments}, contains 3 levels: 1) modelID, 2) annotationID, 3)
testID.

<<>>=
enrichments <- list(
  main = list(
    c2 = list(
       basal.vs.lp = cam.BasalvsLP.oa,
       basal.vs.ml = cam.BasalvsML.oa
    )
  )
)
@

I add this to the OmicAnalyzer study with \texttt{addEnrichments()}.

<<>>=
study <- addEnrichments(study, enrichments)
@

For more details, run \texttt{?addEnrichments}.

\subsection{Describe models}

You can provide more detailed descriptions of your models. These will be
displayed in the app when a user hovers over each \texttt{modelID}. Below I
describe the only model I currently have for this study.

<<>>=
models <- list(
  main = "limma+voom model of RNA-seq experiment of mouse mammary glands"
)
@

And then add it to the OmicAnalyzer study with \texttt{addModels}.

<<>>=
study <- addModels(study, models)
@

For more details, run \texttt{?addModels}.

\subsection{Describe tests}

You can provide more detailed descriptions of your tests. These will be
displayed in the app when a user hovers over each \texttt{testID}. Below I
describe the two tests that were performed for the modelID \texttt{main}. The
input must be a data frame with the columns \texttt{testID} and
\texttt{description}.

<<>>=
tests <- list(
  main = data.frame(
    testID = c("basal.vs.lp", "basal.vs.ml"),
    description = c("Which genes are DE between Basal and LP cells?",
                    "Which genes are DE between Basal and ML cells?"),
    stringsAsFactors = FALSE
  )
)
@

I then add this to the OmicAnalyzer study with \texttt{addTests}.

<<>>=
study <- addTests(study, tests)
@

For more details, run \texttt{?addTests}.

\subsection{Add features metadata}

Recall that I removed the feature metadata columns from the results tables. I
still want to include these when exploring the results in the app. I can add
them in the features table of OmicAnalyzer. The features table has the following
requirements:

\begin{itemize}

  \item The first column must contain the study featureID. It must be unique,
  and it must be a character vector.

  \item The remaining columns must all be character vectors

\end{itemize}

Even though the two results tables were sorted by p-value for each test, this is
not a problem for OmicAnalyzer. It will automatically merge the test results and
feature metadata in the app's display. Thus I can take the first 3 columns of
one of the objects returned by \texttt{topTable()} to use as the features table
for the modelID \texttt{main}.

<<>>=
features <- list(
  main = basal.vs.lp[, 1:3]
)
@

And add it to the OmicAnalyzer study with \texttt{addFeatures()}.

<<>>=
study <- addFeatures(study, features)
@

For more details, run \texttt{?addFeatures}.

\subsection{Add annotations}

In addition to a table of enrichments, the app can also display a network view
of the enrichment results. In order to do this, OmicAnalyzer needs more
information about the annotation terms that were used. Each node of the
network is a \texttt{termID} and the edges between the nodes are determined by
the number of shared features between any two of the \texttt{termID}'s. The
more shared features, the thicker the edge line will be.\footnote{The user of
the app is able to choose which overlap metric to use when drawing the
thickness of the edge lines.}

The input format for the terms is a named list of character vectors. The names
of the list are the \texttt{termID}'s. Each element is a character vector that
contains the features in that term. Conveniently the c2 terms are already in
this format.

<<>>=
Mm.c2
@

Recall that the data was purposefully subset to provide a minimal example for
this User's Guide. This list only contains 4 terms, whereas the original
\texttt{Mm.c2} used in the RNAseq123 analysis has thousands of terms.

The annotations are added as a nested list. The first level are the names of the
annotations, referred to as the \texttt{annotationID}. This must match the
\texttt{annotationID} used when entering the enrichments tables. The second level
is a list that describes each annotation. In addition to the list of terms, I
include a human readable description as well as the name of the column in the
features table that was used in the enrichments analysis (\texttt{ENTREZID}).

<<>>=
annotations <- list(
  c2 = list(
    terms = Mm.c2,
    description = "Broad Institute's MSigDB c2 collection",
    featureID = "ENTREZID"
  )
)
@

If I were to perform an enrichment analysis with an annotation database that
instead used the gene symbols in its terms, then I would set \texttt{featureID
= "SYMBOL"}.

I add it to the OmicAnalyzer study with \texttt{addAnnotations()}.

<<>>=
study <- addAnnotations(study, annotations)
@

For more details, run \texttt{?addAnnotations}.

\phantomsection
\addcontentsline{toc}{section}{References}
\begin{thebibliography}{2}

  \bibitem{RNAseq123}
    Law CW, Alhamdoosh M, Su S, Dong X, Tian L, Smyth GK, Ritchie ME.
    \href{https://f1000research.com/articles/5-1408/v3}
    {RNA-seq analysis is easy as 1-2-3 with limma, Glimma and edgeR [version 3; peer review: 3 approved].}
    F1000Research 2018, 5:1408

  \bibitem{Sheridan2015}
     Sheridan, J.M., Ritchie, M.E., Best, S.A. et al.
     \href{https://doi.org/10.1186/s12885-015-1187-z}
     {A pooled shRNA screen for regulators of primary mammary stem and progenitor cells identifies roles for \textit{Asap1} and \textit{Prox1}.}
     BMC Cancer 15, 221 (2015).

\end{thebibliography}

\end{document}
