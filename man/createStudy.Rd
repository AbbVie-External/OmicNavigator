% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add.R
\name{createStudy}
\alias{createStudy}
\title{Create a study}
\usage{
createStudy(
  name,
  description = name,
  samples = list(),
  features = list(),
  models = list(),
  assays = list(),
  tests = list(),
  annotations = list(),
  results = list(),
  enrichments = list(),
  metaFeatures = list(),
  plots = list(),
  version = NULL
)
}
\arguments{
\item{name}{Name of the study}

\item{description}{Description of the study}

\item{samples}{The metadata variables that describe the samples in the study.
The input object can be a single data frame or a list of data frames (one
per model). The first column is used as the sample ID, so it must contain
unique values.}

\item{features}{The metadata variables that describe the features in the
study. The input object can be a single data frame or a list of data frames
(one per model). The first column is used as the feature ID, so it must
contain unique values.}

\item{models}{The models analyzed in the study. The input is a named
list. The names correspond to the names of the models. The
elements correspond to the descriptions of the models.}

\item{assays}{The assays from the study. The input object can be a single
data frame or a list of data frames (one per model).The row names should
correspond to the feature IDs (\code{\link{addFeatures}}). The column names
should corresond to the sample IDs (\code{\link{addSamples}}). The data
frame should only contain numeric values.}

\item{tests}{The tests tested by the model(s). A named list.
The names correspond to the name of each test. The elements
correspond to the description of each test.}

\item{annotations}{The annotations used for the enrichment analyses. The
input is a nested list. The top-level list contains one entry per
annotation database, e.g. reactome. The names correspond to the name of
each annotation database. Each of these elements should be list of that
contains more information about each annotation database. Specifically the
sublist should contain 1) \code{description}, a character vector that
describes the resource, 2) \code{featureID}, the name of the column in the
features table that was used for the enrichment analysis (if omitted, it is
assumed to be the main featureID used for the study), and 3) \code{terms},
a list of annotation terms. The names of \code{terms} sublist correspond to
the name of the annotation terms. Each of the annotation terms should be a
character vector of feature IDs.}

\item{results}{The inference results from each model. The input is a
nested named list. The names of the list correspond to the model names.
Each element in the list should be a list of data frames with inference
results, one for each test. The featureID column needs to be included
in each table.}

\item{enrichments}{The enrichment results from each model. The input is a
nested named list. The names of the list correspond to the model names.
Each list element should be a list of the tests tested. The names
correspond to the test names. Each list element should be another list of
annotation databases. The names correspond to the annotation databases.
Each of these elements should be a data frame with enrichment results. Each
table must contain the following columns: "termID", "description",
"nominal" (the nominal statistics), and "adjusted" (the statistics after
adjusting for multiple testing). Any additional columns are ignored.}

\item{metaFeatures}{A table of metadata variables that describe the
meta-features in the study. This is useful anytime there are metadata
variables that cannot be mapped 1:1 to your features. For example, a
peptide may be associated with multiple proteins. The table must contain
the unique featureID used for the study. Also, the object must inherit from
the class data.frame.}

\item{plots}{Custom plotting functions. The input is a nested list. Each
element of the list defines a custom plotting function via a list with
multiple options. The only required option is \code{definition}, which
contains the function definition. You can optionally include
\code{displayName} to control how the plot will be named in the app.
Lastly, if the plottting function requires external packages, these can be
defined in the argument \code{packages}.}

\item{version}{(Optional) Include a version number to track the updates to
your study package. If you export the study to a package, the version is
used as the package version.}
}
\description{
Create a study
}
\examples{

study <- createStudy(name = "ABC",
                     description = "An analysis of ABC")

}
\seealso{
\code{\link{addSamples}},
  \code{\link{addFeatures}},
  \code{\link{addModels}},
  \code{\link{addAssays}},
  \code{\link{addTests}},
  \code{\link{addAnnotations}},
  \code{\link{addResults}},
  \code{\link{addEnrichments}},
  \code{\link{addMetaFeatures}},
  \code{\link{addPlots}},
  \code{\link{exportStudy}},
  \code{\link{installStudy}}
}
